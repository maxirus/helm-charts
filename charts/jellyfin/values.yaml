# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Not used yet.
replicaCount: 1

image:
  
  # image.repository -- Docker registry/repository to pull the image from
  repository: jellyfin/jellyfin
  
  # image.tag -- Overrides the default tag used
  tag:

  # image.pullPolicy -- Docker image pull policy
  pullPolicy: IfNotPresent

  # image.pullSecrets -- Secrets to use when pulling Docker images
  pullSecrets: []

# nameOverride -- Overrides the name of resources
nameOverride: ""

# fullnameOverride -- Overrides the Full Name of resources
fullnameOverride: ""

persistence:
  media:
    
    # NFS configuration takes precendence over PVC
    nfs:
      
      # persistence.media.nfs.server -- Host or IP address of the NFS Share to mount for Media
      server:
      
      # persistence.media.nfs.path -- Path of NFS Share to mount for Media
      path:

    pvc:

      # persistence.media.pvc.enabled -- Enables persistence of for the media directory
      enabled: false

      # persistence.media.pvc.existingClaim -- Set to use an existing PVC instead of creating a new one.
      existingClaim:

      # persistence.media.pvc.storageClass -- (Optional) StorageClass to use for the PVC
      # storageClass: "-"
      
      # persistence.media.pvc.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce
      
      # persistence.media.pvc.size -- size/capacity of the PVC
      size: 8Gi

      # persistence.media.pvc.annotations -- (Optional) annotations to add to the PVC
      annotations: {}

  config:

    # persistence.config.enabled -- Enables persistence for the config directory
    enabled: false

    # persistence.config.existingClaim -- Set to use an existing PVC instead of creating a new one.
    existingClaim:
    
    # persistence.config.storageClass -- (Optional) StorageClass to use for the PVC
    # storageClass: "-"
    
    # persistence.config.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce
    
    # persistence.config.size -- size/capacity of the PVC
    size: 8Gi

    # persistence.config.annotations -- (Optional) annotations to add to the PVC
    annotations: {}
  
  cache:

    # persistence.cache.enabled -- Enables persistence for the config directory
    enabled: false

    # persistence.cache.existingClaim -- Set to use an existing PVC instead of creating a new one.
    existingClaim:
    
    # persistence.cache.storageClass -- (Optional) StorageClass to use for the PVC
    # storageClass: "-"
    
    # persistence.cache.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce
    
    # persistence.cache.size -- size/capacity of the PVC
    size: 8Gi

    # persistence.cache.annotations -- (Optional) annotations to add to the PVC
    annotations: {}

gpu:
  nvidia:
    
    # -- Enables NVIDIA GPU functionality. Must have nvidia device plugin properly installed.
    enabled: false
    
    # -- Set to override the runtime class. Leave blank to use default
    runtimeClassName:

serviceAccount:
  
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  
  # serviceAccount.name -- (string) name of the service account to use. If not set and create is true, a name is generated using the fullname template
  # name:

service:

  # service.type -- Type of Service to use
  type: ClusterIP

  # service.loadBalancerIP -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
  loadBalancerIP:

  # service.port -- Port the Service should communicate on
  port: 80

ingress:

  # ingress.enabled -- Enables the use of an Ingress Controller to front the Service and provide HTTPS
  enabled: false
  
  # ingress.annotations -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  
  # ingress.hosts -- list of hosts and their paths that ingress controller should repsond to.
  hosts:
    - host: chart-example.local
      paths: []
  
  # ingress.tls -- list of TLS configurations
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# resources -- Set resource limits/requests for the Pod(s)
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector -- Node Selector configuration
nodeSelector: {}

# tolerations -- Node toleration configuration
tolerations: []

# affinity -- Set Pod affinity rules
affinity: {}

# podSecurityContext -- Set Pod security contexts
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- Set Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000