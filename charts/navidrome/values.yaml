# Default values for navidrome.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Not used yet.
replicaCount: 1

image:
  # image.repository -- Docker registry/repository to pull the image from
  repository: deluan/navidrome
  
  # image.tag -- Overrides the default tag used
  tag: ""

  # image.pullPolicy -- Docker image pull policy
  pullPolicy: IfNotPresent

  # image.pullSecrets -- Secrets to use when pulling Docker images
  pullSecrets: []

# nameOverride -- Overrides the name of resources
nameOverride: ""

# fullnameOverride -- Overrides the Full Name of resources
fullnameOverride: ""

# config -- Navidrome Configuration settings. See [docs](https://www.navidrome.org/docs/usage/configuration-options/) for details.
config:
  # See https://www.navidrome.org/docs/usage/configuration-options/ for all options
  MusicFolder: "/music"
  DataFolder: "/data"
  LogLevel: DEBUG
  ScanSchedule: "@every 1h"
  TranscodingCacheSize: "150MiB"
  Port: 4533
  LastFM:
    Enabled: true

persistence:
  music:
    
    # NFS configuration takes precendence over PVC
    nfs:
      
      # persistence.music.nfs.server -- Host or IP address of the NFS Share to mount for music
      server:
      
      # persistence.music.nfs.path -- Path of NFS Share to mount for music
      path:

    pvc:

      # persistence.music.pvc.enabled -- Enables persistence of for the music directory
      enabled: false

      # persistence.music.pvc.existingClaim -- Set to use an existing PVC instead of creating a new one.
      existingClaim:

      # persistence.music.pvc.storageClass -- (Optional) StorageClass to use for the PVC
      # storageClass: "-"
      
      # persistence.music.pvc.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce
      
      # persistence.music.pvc.size -- size/capacity of the PVC
      size: 8Gi

      # persistence.music.pvc.annotations -- (Optional) annotations to add to the PVC
      annotations: {}
  
  data:

    # persistence.data.enabled -- Enables persistence for the config directory
    enabled: false

    # persistence.data.existingClaim -- Set to use an existing PVC instead of creating a new one.
    existingClaim:
    
    # persistence.data.storageClass -- (Optional) StorageClass to use for the PVC
    # storageClass: "-"
    
    # persistence.data.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce
    
    # persistence.data.size -- size/capacity of the PVC
    size: 8Gi

    # persistence.data.annotations -- (Optional) annotations to add to the PVC
    annotations: {}
  

serviceAccount:

  # serviceAccount.create -- Specifies whether a service account should be created
  create: true

  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  
  # serviceAccount.name -- (string) name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

service:

  # service.type -- Type of Service to use
  type: ClusterIP
  
  # service.port -- Port the Service should communicate on
  port: 80

ingress:

  # ingress.enabled -- Enables the use of an Ingress Controller to front the Service and provide HTTPS
  enabled: false

  # ingress.annotations -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/proxy-buffering: "off"
  
  # ingress.hosts -- list of hosts and their paths that ingress controller should repsond to.
  hosts:
    - host: chart-example.local
      paths: []
  
  # ingress.tls -- list of TLS configurations
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# resources -- Set resource limits/requests for the Pod(s)
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector -- Node Selector configuration
nodeSelector: {}

# tolerations -- Node toleration configuration
tolerations: []

# affinity -- Set Pod affinity rules
affinity: {}

# podAnnotations -- Pod annotations to add
podAnnotations: {}

# podSecurityContext -- Set Pod security contexts
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- Set Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
