apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "navidrome.fullname" . }}
  labels:
    {{- include "navidrome.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "navidrome.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "navidrome.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "navidrome.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.Port }}
              protocol: TCP
          env:
            - name: ND_CONFIGFILE
              value: "/config/navidrome.yml"
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: config
              mountPath: /config
            - mountPath: "{{ .Values.config.MusicFolder }}"
              name: music
            - mountPath: "{{ .Values.config.DataFolder }}"
              name: data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "navidrome.fullname" . }}-config
        - name: music
        {{- if .Values.persistence.music.nfs.server }}
          nfs:
            server: {{ .Values.persistence.music.nfs.server }}
            path: {{ .Values.persistence.music.nfs.path }}
        {{- else if .Values.persistence.music.pvc.enabled -}}
          persistentVolumeClaim:
            claimName: {{ include "navidrome.musicPVCName" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: data
        {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "navidrome.dataPVCName" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
